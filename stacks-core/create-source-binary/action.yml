## Github workflow to create multiarch binaries from source
name: Create Binaries
description: "Create Binary Archives"
branding:
  icon: "archive"
  color: "gray-dark"

inputs:
  arch:
    description: "Architecture to build binary"
    required: true
  cpu:
    description: "CPU to build binary"
    required: true
  tag:
    description: "Release Tag"
    required: true

runs:
  using: "composite"
  steps:
    ## Setup Docker for the builds
    - name: Docker setup
      id: docker_setup
      uses: stacks-network/actions/docker@main

    ## Set env vars based on the type of arch build
    - name: Set local env vars
      id: set_env
      shell: bash
      run: |
        case ${{ inputs.cpu }} in
          x86-64)
            ## default x64 builds to use v3 variant. TARGET_CPU is required to build for v3 via RUSTFLAGS
            TARGET_CPU="${{ inputs.cpu }}-v3"
            DOCKERFILE_CPU="x64"
            ARCHIVE_NAME="x64"
            ;;
          x86-64-v2)
            ## intel nehalem (2008) and newer
            TARGET_CPU="${{ inputs.cpu }}"
            DOCKERFILE_CPU="x64"
            ARCHIVE_NAME="x64-v2"
            ;;
          x86-64-v3)
            ## intel haswell (2013) and newer
            TARGET_CPU="${{ inputs.cpu }}"
            DOCKERFILE_CPU="x64"
            ARCHIVE_NAME="x64-v3"
            ;;
          x86-64-v4)
            ## intel skylake (2017) and newer
            TARGET_CPU="${{ inputs.cpu }}"
            DOCKERFILE_CPU="x64"
            ARCHIVE_NAME="x64-v4"
            ;;
          *)
            TARGET_CPU=""
            DOCKERFILE_CPU="${{ inputs.cpu }}"
            ARCHIVE_NAME="${{ inputs.cpu }}"
            ;;
        esac
        echo "DOCKERFILE=Dockerfile.${{ inputs.arch }}-${DOCKERFILE_CPU}" >> "$GITHUB_ENV"
        echo "ZIPFILE=${{ inputs.arch }}-${ARCHIVE_NAME}" >> "$GITHUB_ENV"
        echo "TARGET_CPU=${TARGET_CPU}" >> "$GITHUB_ENV"

    ## Build the binaries using defined dockerfiles
    - name: Build Binary (${{ inputs.arch }}_${{ inputs.cpu }})
      id: build_binaries
      uses: docker/build-push-action@2cdde995de11925a030ce8070c3d77a52ffcf1c0 # 5.3.0
      with:
        file: ${{ github.action_path }}/build-scripts/${{ env.DOCKERFILE }}
        outputs: type=local,dest=./release/${{ inputs.arch }}
        build-args: |
          STACKS_NODE_VERSION=${{ inputs.tag || env.GITHUB_SHA_SHORT }}
          OS_ARCH=${{ inputs.arch }}
          TARGET_CPU=${{ env.TARGET_CPU }}
          GIT_BRANCH=${{ env.GITHUB_REF_SHORT }}
          GIT_COMMIT=${{ env.GITHUB_SHA_SHORT }}

    ## Compress the binary artifact
    - name: Compress artifact
      id: compress_artifact
      shell: bash
      run: |
        zip --junk-paths ${{ env.ZIPFILE }} ./release/${{ inputs.arch }}/*

    ## Upload the binary artifact to the github action (used in `github-release.yml` to create a release)
    - name: Upload artifact
      id: upload_artifact
      uses: actions/upload-artifact@5d5d22a31266ced268874388b861e4b58bb5c2f3 # v4.3.1
      with:
        path: ${{ env.ZIPFILE }}.zip
