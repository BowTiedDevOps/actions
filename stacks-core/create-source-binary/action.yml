## Github workflow to create multiarch binaries from source
name: Create Binaries

inputs:
  arch:
    description: "Architecture to build binary for"
    required: true
    type: string
  cpu:
    description: "The target CPU"
    required: true
    type: string
  tag:
    description: "Release Tag"
    required: false
    type: string

runs:
  using: "composite"
  steps:
    ## Setup Docker for the builds
    - name: Docker setup
      uses: stacks-network/actions/docker@main

    - name: Checkout Actions
      uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
      with:
        repository: BowTiedDevOps/actions
        ref: feat/update-release-build-dockerfiles
        sparse-checkout: |
          stacks-core/create-source-binary/build-scripts
        sparse-checkout-cone-mode: false
        path: dockerfiles

    ## Set environment variables to be used in builds
    - name: Set local env vars
      id: set_env_vars
      shell: bash
      run: |
        case ${{ inputs.cpu }} in
            x86-64)
                TARGET_CPU="${{ inputs.cpu }}"
                DOCKERFILE_CPU="x64"
                ARCHIVE_NAME="x64"
                ;;
            x86-64-v3)
                TARGET_CPU="${{ inputs.cpu }}"
                DOCKERFILE_CPU="x64"
                ARCHIVE_NAME="x64-v3"
                ;;
            *)
                TARGET_CPU=""
                DOCKERFILE_CPU="${{ inputs.cpu }}"
                ARCHIVE_NAME="${{ inputs.cpu }}"
                ;;
        esac

        # Set env vars
        echo "DOCKERFILE=Dockerfile.${{ inputs.arch }}-${DOCKERFILE_CPU}" >> "$GITHUB_ENV"
        echo "ZIPFILE=${{ inputs.arch }}-${ARCHIVE_NAME}" >> "$GITHUB_ENV"
        echo "TARGET_CPU=${TARGET_CPU}" >> "$GITHUB_ENV"

        # Print env vars
        echo "DOCKERFILE: ${DOCKERFILE}"
        echo "ZIPFILE: ${ZIPFILE}"
        echo "TARGET_CPU: ${TARGET_CPU}"

        # Print paths
        pwd
        ls -al
        ls -al dockerfiles/stacks-core/create-source-binary/build-scripts

    ## Build the binaries using defined dockerfiles
    - name: Build Binary (${{ inputs.arch }}_${{ inputs.cpu }})
      id: build_binaries
      uses: docker/build-push-action@0565240e2d4ab88bba5387d719585280857ece09 # 5.0.0
      with:
        file: dockerfiles/stacks-core/create-source-binary/build-scripts/${{ env.DOCKERFILE }}
        outputs: type=local,dest=./release/${{ inputs.arch }}
        build-args: |
          STACKS_NODE_VERSION=${{ inputs.tag || env.GITHUB_SHA_SHORT }}
          OS_ARCH=${{ inputs.arch }}
          TARGET_CPU=${{ env.TARGET_CPU }}
          GIT_BRANCH=${{ env.GITHUB_REF_SHORT }}
          GIT_COMMIT=${{ env.GITHUB_SHA_SHORT }}

    ## Compress the binary artifact
    - name: Compress artifact
      id: compress_artifact
      shell: bash
      run: zip --junk-paths ${{ env.ZIPFILE }} ./release/${{ inputs.arch }}/*

    ## Upload the binary artifact to the github action
    - name: Upload artifact
      id: upload_artifact
      uses: actions/upload-artifact@a8a3f3ad30e3422c9c7b888a15615d19a852ae32 # v3.1.3
      with:
        path: ${{ env.ZIPFILE }}.zip
